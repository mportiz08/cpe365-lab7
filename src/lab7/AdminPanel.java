package lab7;

import java.sql.*;
import javax.swing.*;

/*
 * AdminPanel -- the INN App admin interface
 * @author Marcus Ortiz
 */
public class AdminPanel extends javax.swing.JPanel
{
  public static java.awt.Color GREEN = new java.awt.Color(61, 116, 94);
  public static java.awt.Color RED = new java.awt.Color(255, 0, 0);
  private Connection conn;
  private Admin admin;

  /** Creates new form AdminPanel */
  public AdminPanel()
  {
    initComponents();
  }

  public void addConnection(Connection c)
  {
    this.conn = c;
    this.admin = new Admin(c);

    updateStatus();
  }

  private void updateStatus()
  {
    Integer numRooms = this.admin.getNumRooms();
    Integer numReservations = this.admin.getNumReservations();
    Admin.Status s = this.admin.getDBStatus();
    
    this.rooms.setText(numRooms.toString());
    this.reservations.setText(numReservations.toString());

    if(s == Admin.Status.FULL)
    {
      this.status.setForeground(GREEN);
      this.status.setText("full");
    }
    else
    {
      this.status.setForeground(RED);
      if(s == Admin.Status.EMPTY)
      {
        this.status.setText("empty");
      }
      else if(s == Admin.Status.NO_DB)
      {
        this.status.setText("no database");
      }
    }
  }

  /** This method is called from within the constructor to
   * initialize the form.
   * WARNING: Do NOT modify this code. The content of this method is
   * always regenerated by the Form Editor.
   */
  @SuppressWarnings("unchecked")
  // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
  private void initComponents() {

    statusLabel = new javax.swing.JLabel();
    status = new javax.swing.JLabel();
    reservationsLabel = new javax.swing.JLabel();
    reservations = new javax.swing.JLabel();
    roomsLabel = new javax.swing.JLabel();
    rooms = new javax.swing.JLabel();
    viewRoomsButton = new javax.swing.JButton();
    viewReservationsButton = new javax.swing.JButton();
    clearDBButton = new javax.swing.JButton();
    reloadDBButton = new javax.swing.JButton();
    tableContainer = new javax.swing.JScrollPane();
    removeDBButton = new javax.swing.JButton();

    setMinimumSize(new java.awt.Dimension(700, 400));
    setName("Form"); // NOI18N
    setPreferredSize(new java.awt.Dimension(700, 400));

    org.jdesktop.application.ResourceMap resourceMap = org.jdesktop.application.Application.getInstance(lab7.Lab7App.class).getContext().getResourceMap(AdminPanel.class);
    statusLabel.setFont(resourceMap.getFont("statusLabel.font")); // NOI18N
    statusLabel.setText(resourceMap.getString("statusLabel.text")); // NOI18N
    statusLabel.setName("statusLabel"); // NOI18N

    status.setForeground(resourceMap.getColor("status.foreground")); // NOI18N
    status.setText(resourceMap.getString("status.text")); // NOI18N
    status.setName("status"); // NOI18N

    reservationsLabel.setFont(resourceMap.getFont("reservationsLabel.font")); // NOI18N
    reservationsLabel.setText(resourceMap.getString("reservationsLabel.text")); // NOI18N
    reservationsLabel.setName("reservationsLabel"); // NOI18N

    reservations.setText(resourceMap.getString("reservations.text")); // NOI18N
    reservations.setName("reservations"); // NOI18N

    roomsLabel.setFont(resourceMap.getFont("roomsLabel.font")); // NOI18N
    roomsLabel.setText(resourceMap.getString("roomsLabel.text")); // NOI18N
    roomsLabel.setName("roomsLabel"); // NOI18N

    rooms.setText(resourceMap.getString("rooms.text")); // NOI18N
    rooms.setName("rooms"); // NOI18N

    viewRoomsButton.setLabel(resourceMap.getString("viewRoomsButton.label")); // NOI18N
    viewRoomsButton.setName("viewRoomsButton"); // NOI18N
    viewRoomsButton.addMouseListener(new java.awt.event.MouseAdapter() {
      public void mouseClicked(java.awt.event.MouseEvent evt) {
        viewRoomsHandler(evt);
      }
    });

    viewReservationsButton.setLabel(resourceMap.getString("viewReservationsButton.label")); // NOI18N
    viewReservationsButton.setName("viewReservationsButton"); // NOI18N
    viewReservationsButton.addMouseListener(new java.awt.event.MouseAdapter() {
      public void mouseClicked(java.awt.event.MouseEvent evt) {
        viewReservationsHandler(evt);
      }
    });

    clearDBButton.setText(resourceMap.getString("clearDBButton.text")); // NOI18N
    clearDBButton.setName("clearDBButton"); // NOI18N
    clearDBButton.addMouseListener(new java.awt.event.MouseAdapter() {
      public void mouseClicked(java.awt.event.MouseEvent evt) {
        clearDBHandler(evt);
      }
    });

    reloadDBButton.setText(resourceMap.getString("reloadDBButton.text")); // NOI18N
    reloadDBButton.setName("reloadDBButton"); // NOI18N
    reloadDBButton.addMouseListener(new java.awt.event.MouseAdapter() {
      public void mouseClicked(java.awt.event.MouseEvent evt) {
        reloadDBHandler(evt);
      }
    });

    tableContainer.setName("tableContainer"); // NOI18N

    removeDBButton.setLabel(resourceMap.getString("removeDBButton.label")); // NOI18N
    removeDBButton.setName("removeDBButton"); // NOI18N

    org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(this);
    this.setLayout(layout);
    layout.setHorizontalGroup(
      layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
      .add(layout.createSequentialGroup()
        .addContainerGap()
        .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
          .add(tableContainer, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 660, Short.MAX_VALUE)
          .add(layout.createSequentialGroup()
            .add(statusLabel)
            .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
            .add(status)
            .add(18, 18, 18)
            .add(reservationsLabel)
            .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
            .add(reservations)
            .add(18, 18, 18)
            .add(roomsLabel)
            .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
            .add(rooms))
          .add(layout.createSequentialGroup()
            .add(viewRoomsButton)
            .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
            .add(viewReservationsButton)
            .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
            .add(clearDBButton)
            .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
            .add(reloadDBButton)
            .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
            .add(removeDBButton)))
        .addContainerGap())
    );
    layout.setVerticalGroup(
      layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
      .add(layout.createSequentialGroup()
        .addContainerGap()
        .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
          .add(statusLabel)
          .add(status)
          .add(reservationsLabel)
          .add(reservations)
          .add(roomsLabel)
          .add(rooms))
        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
        .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
          .add(viewRoomsButton)
          .add(viewReservationsButton)
          .add(clearDBButton)
          .add(reloadDBButton)
          .add(removeDBButton))
        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
        .add(tableContainer, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 299, Short.MAX_VALUE)
        .addContainerGap())
    );
  }// </editor-fold>//GEN-END:initComponents

private void viewRoomsHandler(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_viewRoomsHandler
  Object[][] data = this.admin.getRooms();
  JTable table = new JTable(new RoomsTableModel(data));
  
  this.tableContainer.setViewportView(table);
  table.setFillsViewportHeight(true);
}//GEN-LAST:event_viewRoomsHandler

private void viewReservationsHandler(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_viewReservationsHandler
  Object[][] data = this.admin.getReservations();
  JTable table = new JTable(new ReservationsTableModel(data));
  
  this.tableContainer.setViewportView(table);
  table.setFillsViewportHeight(true);
}//GEN-LAST:event_viewReservationsHandler

private void clearDBHandler(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_clearDBHandler
  this.admin.clearDB();
  updateStatus();
  this.tableContainer.setViewportView(null);
}//GEN-LAST:event_clearDBHandler

private void reloadDBHandler(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_reloadDBHandler
  
}//GEN-LAST:event_reloadDBHandler

  // Variables declaration - do not modify//GEN-BEGIN:variables
  private javax.swing.JButton clearDBButton;
  private javax.swing.JButton reloadDBButton;
  private javax.swing.JButton removeDBButton;
  private javax.swing.JLabel reservations;
  private javax.swing.JLabel reservationsLabel;
  private javax.swing.JLabel rooms;
  private javax.swing.JLabel roomsLabel;
  private javax.swing.JLabel status;
  private javax.swing.JLabel statusLabel;
  private javax.swing.JScrollPane tableContainer;
  private javax.swing.JButton viewReservationsButton;
  private javax.swing.JButton viewRoomsButton;
  // End of variables declaration//GEN-END:variables
}
